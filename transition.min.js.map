{"version":3,"file":"transition.min.js","sources":["../lib/almond.js","utils.js","../lib/thenable.min.js","transition.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license almond 0.3.0 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","define('utils',[],function() {\n    \n    var transEndEventNames,\n        supportedCssProperty,\n        supportedCssPropertyHash = {},\n        hasTransition,\n        transitionProperty,\n        transitionDuration,\n        transitionDelay,\n        transitionTimingFunction,\n        transitionEndEvent,\n        capsRegexp = /[A-Z]/g,\n        eventLoopCallbacks = [];\n\n    transEndEventNames = {\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'oTransitionEnd',\n        'msTransition': 'MSTransitionEnd',\n        'transition': 'transitionend'\n    };\n    \n    supportedCssProperty = (function() {\n        var div = document.createElement('div'),\n            prefixes = ['Webkit', 'Moz', 'O', 'ms', 'Khtml'],\n            firstCharRegExp = /^[a-z]/,\n            len = prefixes.length;\n    \n        return function(property) {\n            var i, prefixedProperty, upperCaseProperty;\n\n            if (supportedCssPropertyHash.hasOwnProperty(property)) {\n                return supportedCssPropertyHash[property];\n            }\n    \n            // Check if W3C standard property is supported\n            if (typeof div.style[property] !== \"undefined\") {\n                supportedCssPropertyHash[property] = property;\n                return property;\n            }\n    \n            // Standard property is not supported, add vendor prefix and test for different vendors.\n            upperCaseProperty = property.replace(firstCharRegExp, function(firstChar) {\n                return firstChar.toUpperCase();\n            });\n    \n            for (i = 0; i < len; i++) {\n                prefixedProperty = prefixes[i] + upperCaseProperty;\n                if (typeof div.style[prefixedProperty] !== \"undefined\") {\n                    supportedCssPropertyHash[property] = prefixedProperty;\n                    return prefixedProperty;\n                }\n            }\n    \n            return null;\n        };\n    })();\n    \n    hasTransition = supportedCssProperty('transition') !== null;\n    transitionProperty = supportedCssProperty('transitionProperty');\n    transitionDuration = supportedCssProperty('transitionDuration');\n    transitionDelay = supportedCssProperty('transitionDelay');\n    transitionTimingFunction = supportedCssProperty('transitionTimingFunction');\n    transitionEndEvent = transEndEventNames[supportedCssProperty('transition')];\n    \n    function replacementFunction(match) {\n        return \"-\" + match.toLowerCase();\n    }\n\n    function executeEventLoopCallbacks() {\n        var i, callbacks = eventLoopCallbacks.slice(), callback, func;\n        eventLoopCallbacks = [];\n        for (i = 0; i < callbacks.length; i++) {\n            callback = callbacks[i];\n            func = callback.func;\n            if (callback.context) {\n                func.apply(callback.context);\n            } else {\n                func();\n            }\n        }\n    }\n    \n    return {\n    \n        supportedCssProperty: supportedCssProperty,\n    \n        hasTransition: hasTransition,\n        transitionProperty: transitionProperty,\n        transitionDuration: transitionDuration,\n        transitionDelay: transitionDelay,\n        transitionTimingFunction: transitionTimingFunction,\n        transitionEndEvent: transitionEndEvent,\n    \n        camelCaseToDashes: function(str) {\n            return str.replace(capsRegexp, replacementFunction);\n        },\n    \n        domToCSS: function(name) {\n            return name.replace(/[A-Z]/g, function(match) {\n                return '-' + match.toLowerCase();\n            }).replace(/^ms-/, '-ms-');\n        },\n\n        cssToDOM: function(name) {\n            return name.replace(/-([a-z])/g, function(match, p1) {\n                return p1.toUpperCase();\n            }).replace(/^[A-Z]/, function(match) {\n                return match.toLowerCase();\n            });\n        },\n\n        requestAnimationFrame: function(callback, context) {\n            return window.requestAnimationFrame(function(timestamp) {\n                if (context) {\n                    callback.apply(context, [timestamp]);\n                } else {\n                    callback(timestamp);\n                }\n            }, null);\n        },\n\n        executeInNextEventLoop: function(func, context) {\n            if (eventLoopCallbacks.length === 0) {\n                window.setTimeout(executeEventLoopCallbacks, 0)\n            }\n            eventLoopCallbacks.push({\n                func: func,\n                context: context\n            });\n        },\n\n        /**\n         * Extend a given object with all the properties in passed-in object(s).\n         * http://underscorejs.org/docs/underscore.html\n         */\n        extend: function(obj) {\n            if (!this.isObject(obj)) return obj;\n            var source, prop;\n            for (var i = 1, length = arguments.length; i < length; i++) {\n                source = arguments[i];\n                for (prop in source) {\n                    if (hasOwnProperty.call(source, prop)) {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n            return obj;\n        },\n\n        /**\n         * Fill in a given object with default properties.\n         * http://underscorejs.org/docs/underscore.html\n         */\n        defaults: function(obj) {\n            if (!this.isObject(obj)) return obj;\n            for (var i = 1, length = arguments.length; i < length; i++) {\n                var source = arguments[i];\n                for (var prop in source) {\n                    if (source.hasOwnProperty(prop)) {\n                        if (obj[prop] === void 0) obj[prop] = source[prop];\n                    }\n                }\n            }\n            return obj;\n        },\n\n        /**\n         * Is a given variable an object?\n         * http://underscorejs.org/docs/underscore.html\n         */\n        isObject: function(obj) {\n            var type = typeof obj;\n            return type === 'function' || type === 'object' && !!obj;\n        },\n\n        isFunction: function(obj) {\n            return typeof obj === 'function';\n        },\n\n        isString: function(obj) {\n            return typeof obj === 'string';\n        },\n\n        isNumber: function(obj) {\n            return typeof obj === 'number';\n        },\n\n        isBoolean: function(obj) {\n            return typeof obj === 'boolean';\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return Object.prototype.toString.call(obj) === '[object Array]';\n        }\n    };\n    \n});\n","/*!\n**  Thenable -- Embeddable Minimum Strictly-Compliant Promises/A+ 1.1.1 Thenable\n**  Copyright (c) 2013-2014 Ralf S. Engelschall <http://engelschall.com>\n**  Licensed under The MIT License <http://opensource.org/licenses/MIT>\n**  Source-Code distributed on <http://github.com/rse/thenable>\n*/\n!function(a,b,c){\"function\"==typeof define&&\"undefined\"!=typeof define.amd?define(b,function(){return c(a)}):\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=c(a):a[b]=function(){var d=a[b],e=c(a);return e.noConflict=function(){return a[b]=d,e},e}()}(this,\"Thenable\",function(){var a=0,b=1,c=2,d=function(b){return this instanceof d?(this.id=\"Thenable/1.0.7\",this.state=a,this.fulfillValue=void 0,this.rejectReason=void 0,this.onFulfilled=[],this.onRejected=[],this.proxy={then:this.then.bind(this)},void(\"function\"==typeof b&&b.call(this,this.fulfill.bind(this),this.reject.bind(this)))):new d(b)};d.prototype={fulfill:function(a){return e(this,b,\"fulfillValue\",a)},reject:function(a){return e(this,c,\"rejectReason\",a)},then:function(a,b){var c=this,e=new d;return c.onFulfilled.push(h(a,e,\"fulfill\")),c.onRejected.push(h(b,e,\"reject\")),f(c),e.proxy}};var e=function(b,c,d,e){return b.state===a&&(b.state=c,b[d]=e,f(b)),b},f=function(a){a.state===b?g(a,\"onFulfilled\",a.fulfillValue):a.state===c&&g(a,\"onRejected\",a.rejectReason)},g=function(a,b,c){if(0!==a[b].length){var d=a[b];a[b]=[];var e=function(){for(var a=0;a<d.length;a++)d[a](c)};\"object\"==typeof process&&\"function\"==typeof process.nextTick?process.nextTick(e):\"function\"==typeof setImmediate?setImmediate(e):setTimeout(e,0)}},h=function(a,b,c){return function(d){if(\"function\"!=typeof a)b[c].call(b,d);else{var e;try{e=a(d)}catch(f){return void b.reject(f)}i(b,e)}}},i=function(a,b){if(a===b||a.proxy===b)return void a.reject(new TypeError(\"cannot resolve promise with itself\"));var c;if(\"object\"==typeof b&&null!==b||\"function\"==typeof b)try{c=b.then}catch(d){return void a.reject(d)}if(\"function\"!=typeof c)a.fulfill(b);else{var e=!1;try{c.call(b,function(c){e||(e=!0,c===b?a.reject(new TypeError(\"circular thenable chain\")):i(a,c))},function(b){e||(e=!0,a.reject(b))})}catch(d){e||a.reject(d)}}};return d});\ndefine(\"Thenable\", function(){});\n\n","define('transition',['./utils', 'Thenable'], function(utils, Thenable) {\n\n    /**\n     * TransitionProperty(property, from, to[, arg1[, arg2[, arg3[, arg4]]]])\n     *\n     * The argN arguments are used as transition-delay, transition-duration, transition-timing-function and\n     * transitionend callback.\n     *\n     * The first argN value that can be parsed as a time is assigned to the transition-duration, and the second value\n     * that can be parsed as a time is assigned to transition-delay.\n     * Otherwise, if the argN value that can't be parsed as a time, then if it is a string it is assigned to\n     * transition-timing-function, otherwise, if it is a function it is called from the transitionend event handler or\n     * when property is restarted as a consequence of transition override.\n     *\n     * TransitionProperty(options)\n     * options.property\n     * options.from\n     * options.to\n     * options.duration: assigned to the transition-duration\n     * options.delay: assigned to the transition-delay\n     * options.timingFunction: assigned to the transition-timing-function\n     * options.onTransitionEnd: called from the transitionend event handler\n     * options.beginFromCurrentValue: boolean flag indicating whether transition of this property should continue\n     *      another ongoing transition from its current value. If no other transition already transitions this property\n     *      this flag is ignored.\n     *\n     * @constructor\n     */\n    function TransitionProperty() {\n        var i, argument, obj = null, arr = null,\n            timeRegExp = /[-+]?\\d+(?:.\\d+)?(?:s|ms)/i,\n            durationSet = false;\n\n        if (arguments.length === 1) {\n            if (utils.isString(arguments[0])) {\n                arr = arguments[0].split(\" \");\n            } else if (utils.isArray(arguments[0])) {\n                arr = arguments[0];\n            } else {\n                obj = arguments[0];\n            }\n        } else {\n            arr = arguments;\n        }\n\n        if (obj) {\n            this.property = obj.property;\n            this.from = obj.from;\n            this.to = obj.to;\n            this.duration = (utils.isString(obj.duration) && timeRegExp.test(obj.duration)) ? obj.duration : null;\n            this.delay = (utils.isString(obj.delay) && timeRegExp.test(obj.delay)) ? obj.delay : null;\n            this.timingFunction = (utils.isString(obj.timingFunction)) ? obj.timingFunction : null;\n            this.onTransitionEnd = utils.isFunction(obj.onTransitionEnd) ? obj.onTransitionEnd : null;\n            this.beginFromCurrentValue = utils.isBoolean(obj.beginFromCurrentValue) ? obj.beginFromCurrentValue : null;\n        } else if (arr.length >= 3) {\n            this.property = arr[0];\n            this.from = arr[1];\n            this.to = arr[2];\n            this.duration = null;\n            this.delay = null;\n            this.timingFunction = null;\n            this.onTransitionEnd = null;\n            this.beginFromCurrentValue = null;\n            for (i = 3; i < arr.length; i++) {\n                argument = arr[i];\n                if (utils.isString(argument)) {\n                    if (timeRegExp.test(argument)) {\n                        if (!durationSet) {\n                            durationSet = true;\n                            this.duration = argument;\n                        } else {\n                            this.delay = argument;\n                        }\n                    } else {\n                        this.timingFunction = argument;\n                    }\n                } else if (utils.isFunction(argument)) {\n                    this.onTransitionEnd = argument;\n                }\n            }\n        } else {\n            throw \"[TransitionProperty] Invalid number of arguments.\"\n        }\n\n        this.domProperty = utils.supportedCssProperty(this.property);\n        this.cssProperty = utils.domToCSS(this.domProperty);\n    }\n\n    function Transition(properties, options) {\n        if (!properties) {\n            throw \"Transition: 'properties' is a required parameter\";\n        }\n\n        options = utils.defaults(options || {}, Transition.defaultOptions);\n        this.properties = properties;\n        this.duration = options.duration;\n        this.delay = options.delay;\n        this.timingFunction = options.timingFunction;\n        this.onTransitionEnd = options.onTransitionEnd;\n        this.thenable = new Thenable();\n        this.onBeforeChangeStyle = options.onBeforeChangeStyle;\n        this.onAfterChangeStyle = options.onAfterChangeStyle;\n        this.beginFromCurrentValue = utils.isBoolean(options.beginFromCurrentValue) ? options.beginFromCurrentValue : false;\n        this.toBeTransitionedPropertyNames = [];\n        this.toBeTransitionedProperties = [];\n        this.transitioningPropertyNames = [];\n        this.transitioningProperties = [];\n        this.allPropertiesWereFinished = true;\n    }\n\n    Transition.defaultOptions = {\n        duration: '400ms',\n        delay: '0s',\n        timingFunction: 'ease',\n        onTransitionEnd: null,\n        onBeforeChangeStyle: null,\n        onAfterChangeStyle: null\n    };\n\n    Transition.property = function(properties) {\n        return new TransitionProperty(properties);\n    };\n\n    /**\n     * Applies CSS transition on specified element using properties other transition related data specified in options.\n     *\n     * @param {HTMLElement} element\n     * @param {Array|Object} properties\n     * @param {Object} options\n     * @param {String} options.duration\n     * @param {String} options.delay\n     * @param {String} options.timingFunction\n     * @param {Function} options.onBeforeChangeStyle\n     * @param {Function} options.onAfterChangeStyle\n     * @param {Function} options.onTransitionEnd\n     */\n    Transition.begin = function(element, properties, options) {\n        var transition, i, property, _properties = [];\n\n        if (properties.hasOwnProperty(\"properties\")) {\n            options = properties;\n            properties = properties[\"properties\"];\n        }\n\n        if (utils.isString(properties)) {\n            _properties.push(new TransitionProperty(properties));\n        } else if (utils.isArray(properties)) {\n            // properties: [ ... ]\n            if (utils.isString(properties[0]) && properties[0].indexOf(\" \") === -1) {\n                // properties: ['opacity', '0', '1', ...]\n                _properties.push(new TransitionProperty(properties));\n            } else {\n                for (i = 0; i < properties.length; i++) {\n                    property = properties[i];\n                    if (utils.isArray(property) || !(property instanceof TransitionProperty)) {\n                        // properties: [ [\"opacity 0 1\"], [ ... ], ... ]\n                        // properties: [ [\"opacity\", 0, 1], [ ... ], ... ]\n                        // properties: [ {property: \"opacity\", from: 0, to: 1}, { ... }, ... ]\n                        property = new TransitionProperty(property);\n                    }\n                    // If not above, then property is instance of TransitionProperty\n                    // properties: [new TransitionProperty(\"opacity\", 0, 1)]\n                    _properties.push(property);\n                }\n            }\n        } else {\n            // properties: { ... }\n            for (property in properties) {\n                if (properties.hasOwnProperty(property)) {\n                    if (utils.isArray(properties[property])) {\n                        // properties: { \"opacity\": [0, 1], ... }\n                        property = [property].concat(properties[property]);\n                        property = new TransitionProperty(property);\n                    } else {\n                        // properties: { \"opacity\": {from: 0, to: 1}, ... }\n                        property = utils.defaults({\"property\": property}, properties[property]);\n                        property = new TransitionProperty(property);\n                    }\n                    _properties.push(property);\n                }\n            }\n        }\n\n        transition = new Transition(_properties, options);\n        transition.beginTransition(element);\n\n        return {\n            then: transition.thenable.proxy.then,\n            stop: function() {\n                transition.stop();\n            }\n        };\n    };\n\n    Transition.getElementTransitionValues = function(element) {\n        var i, commaRegExp = /\\s*,\\s*/,\n            transitionPropertyCSS,\n            transitionDurationCSS,\n            transitionDelayCSS,\n            transitionTimingFunctionCSS,\n            cssProperties = [],\n            durations = [],\n            delays = [],\n            timingFunctions = [],\n            regExpResult,\n            cssPropertiesLength,\n            durationsLength,\n            delaysLength,\n            timingFunctionsLength;\n\n        transitionPropertyCSS = element.style[utils.transitionProperty];\n\n        // If the element has no specified properties in transition-property then do not get the rest of transition-*\n        // properties and leave them empty. Otherwise, get the rest of transition-* properties and fill them to the\n        // length of transition-property by repeating their values. Do we really need this?\n        // https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions#When_property_value_lists_are_of_different_lengths\n        if (transitionPropertyCSS) {\n\n            transitionDurationCSS = element.style[utils.transitionDuration];\n            transitionDelayCSS = element.style[utils.transitionDelay];\n            transitionTimingFunctionCSS = element.style[utils.transitionTimingFunction];\n\n            cssProperties   = transitionPropertyCSS.split(commaRegExp);\n            durations       = transitionDurationCSS       ? transitionDurationCSS.split(commaRegExp)       : [\"0s\"];\n            delays          = transitionDelayCSS          ? transitionDelayCSS.split(commaRegExp)          : [\"0s\"];\n\n            if (!transitionTimingFunctionCSS) {\n                timingFunctions = [\"ease\"];\n            } else {\n                timingFunctions = [];\n                commaRegExp = /(?:\\s*,)?\\s*([^(,]+(?:\\([^)]+\\))?)/g;\n                while (regExpResult = commaRegExp.exec(transitionTimingFunctionCSS) !== null) {\n                    timingFunctions.push(regExpResult[1])\n                }\n            }\n\n            cssPropertiesLength = cssProperties.length;\n            durationsLength = durations.length;\n            delaysLength = delays.length;\n            timingFunctionsLength = timingFunctions.length;\n\n            for (i = 0; i < cssPropertiesLength; i++) {\n                if (durationsLength <= i) {\n                    durations.push(durations[i % durationsLength]);\n                }\n                if (delaysLength <= i) {\n                    delays.push(delays[i % delaysLength]);\n                }\n                if (timingFunctionsLength <= i) {\n                    timingFunctions.push(timingFunctions[i % timingFunctionsLength]);\n                }\n            }\n        }\n\n        return {\n            cssProperties: cssProperties,\n            durations: durations,\n            delays: delays,\n            timingFunctions: timingFunctions\n        }\n    };\n\n    Transition.setElementTransitionValues = function(element, transitions) {\n        element.style[utils.transitionProperty] = transitions.cssProperties.join(\", \");\n        element.style[utils.transitionDuration] = transitions.durations.join(\", \");\n        element.style[utils.transitionDelay] = transitions.delays.join(\", \");\n        element.style[utils.transitionTimingFunction] = transitions.timingFunctions.join(\", \");\n    };\n\n    Transition.prototype = {\n\n        constructor: Transition,\n\n        beginTransition: function(element) {\n            var i, property;\n\n            this.finishTransitioningPropertiesIfExist(element);\n\n            // Must ensure that all transition properties have \"from\" values. Otherwise we wouldn't be able to check\n            // if a property has equal \"from\" and \"to\" values and not to transition them. Their \"transitionend\" event\n            // wouldn't be called anyway.\n            for (i = 0; i < this.properties.length; i++) {\n                property = this.properties[i];\n                if (!utils.isString(property.from) && !utils.isNumber(property.from)) {\n                    property.from = window.getComputedStyle(element, null).getPropertyValue(property.cssProperty);\n                }\n            }\n\n            for (i = 0; i < this.properties.length; i++) {\n                property = this.properties[i];\n                if (property.from == property.to) {\n                    element.style[property.domProperty] = property.to;\n                    this.executeOnTransitionEndForProperty(property, element, true);\n                } else {\n                    element.style[property.domProperty] = property.from;\n                    this.toBeTransitionedPropertyNames.push(property.cssProperty);\n                    this.toBeTransitionedProperties.push(property);\n                }\n            }\n\n            if (utils.isFunction(this.onBeforeChangeStyle)) {\n                this.onBeforeChangeStyle(element);\n            }\n\n            if (this.toBeTransitionedProperties.length === 0) {\n                if (utils.isFunction(this.onAfterChangeStyle)) {\n                    this.onAfterChangeStyle(element);\n                }\n                this.executeOnTransitionEnd(element, true);\n                return;\n            }\n\n            // Trigger reflow\n            // noinspection BadExpressionStatementJS\n            element.offsetHeight;\n\n            this.addTransitionEndListener(element);\n\n            utils.executeInNextEventLoop(function() {\n                var transitionValues, i, property;\n\n                // If other transition began after this one in the same event loop, they could cause\n                // toBeTransitionedProperties of this transition to be removed and thus end this transition.\n                // No need to call \"onAfterChangeStyle\" and \"removeTransitionEndListener\" as they were already called\n                // from \"finishToBeTransitionedProperties\".\n                if (this.toBeTransitionedProperties.length === 0) {\n                    return;\n                }\n\n                // Trigger reflow\n                // noinspection BadExpressionStatementJS\n                // element.offsetHeight;\n                // this.beforeChangeStyle(element)\n\n                // from http://www.w3.org/TR/css3-transitions/#starting\n                // when one of these ‘transition-*’ properties changes at the same time as a property whose change might\n                // transition, it is the new values of the ‘transition-*’ properties that control the transition.\n\n                transitionValues = Transition.getElementTransitionValues(element);\n                for (i = 0; i < this.toBeTransitionedProperties.length; i++) {\n                    property = this.toBeTransitionedProperties[i];\n                    transitionValues.cssProperties.push(property.cssProperty);\n                    transitionValues.durations.push(property.duration || this.duration);\n                    transitionValues.delays.push(property.delay || this.delay);\n                    transitionValues.timingFunctions.push(property.timingFunction || this.timingFunction);\n                }\n                this.transitioningPropertyNames = this.toBeTransitionedPropertyNames;\n                this.transitioningProperties = this.toBeTransitionedProperties;\n                this.toBeTransitionedPropertyNames = [];\n                this.toBeTransitionedProperties = [];\n                Transition.setElementTransitionValues(element, transitionValues);\n\n                for (i = 0; i < this.transitioningProperties.length; i++) {\n                    property = this.transitioningProperties[i];\n                    element.style[property.domProperty] = property.to;\n                }\n\n                // Trigger reflow\n                // noinspection BadExpressionStatementJS\n                // element.offsetHeight;\n                if (utils.isFunction(this.onAfterChangeStyle)) {\n                    this.onAfterChangeStyle(element);\n                }\n\n            }, this);\n\n        },\n\n        stop: function() {\n            // TODO\n        },\n\n        handleEvent: function(event) {\n            // Compare event.target to event.currentTarget to ensure that this event is targeted to this element and\n            // not one of its descendants elements that also listen to this event, and then bubbled up.\n            // Because an element can have multiple transitions at once, check that the css property this event related\n            // to is one of the transitioning properties of this transition.\n            if (event.target === event.currentTarget && this.hasTransitioningProperty(event.propertyName)) {\n                this.finishTransitioningProperty(event.currentTarget, event.propertyName);\n            }\n        },\n\n        hasTransitioningProperty: function(propertyName) {\n            return this.transitioningPropertyNames.indexOf(propertyName) >= 0;\n        },\n\n        removeTransitioningProperty: function(propertyName) {\n            var property, index;\n            index = this.transitioningPropertyNames.indexOf(propertyName);\n            if (index < 0) {\n                throw \"[Transition.removeTransitioningProperty]: Transition does not have transitioning property '\" + propertyName + \"'\";\n            }\n            this.transitioningPropertyNames.splice(index, 1);\n            this.transitioningProperties.splice(index, 1);\n        },\n\n        hasToBeTransitionedProperty: function(propertyName) {\n            return this.toBeTransitionedPropertyNames.indexOf(propertyName) >= 0;\n        },\n\n        removeToBeTransitionedProperty: function(propertyName) {\n            var index;\n            index = this.toBeTransitionedPropertyNames.indexOf(propertyName);\n            if (index < 0) {\n                throw \"[Transition.removeToBeTransitionedProperty]: Transition does not have toBeTransitionedProperty '\" + propertyName + \"'\";\n            }\n            this.toBeTransitionedPropertyNames.splice(index, 1);\n            this.toBeTransitionedProperties.splice(index, 1);\n        },\n\n        getPropertyByPropertyName: function(propertyName) {\n            var i;\n            for (i = 0; i < this.properties.length; i++) {\n                if (this.properties[i].cssProperty === propertyName) {\n                    return this.properties[i];\n                }\n            }\n            throw \"[Transition.getPropertyByPropertyName]: Transition does not have property '\" + propertyName + \"'\";\n        },\n\n        finishTransitioningProperty: function(element, propertyName) {\n            var index, transitionValues, property;\n\n            this.removeTransitioningProperty(propertyName);\n\n            transitionValues = Transition.getElementTransitionValues(element);\n\n            index = transitionValues.cssProperties.indexOf(propertyName);\n            if (index < 0) {\n                throw \"[Transition.finishTransitioningProperty]: Did not find transitionProperty '\" + propertyName + \"'\";\n            }\n            transitionValues.cssProperties.splice(index, 1);\n            transitionValues.durations.splice(index, 1);\n            transitionValues.delays.splice(index, 1);\n            transitionValues.timingFunctions.splice(index, 1);\n\n            Transition.setElementTransitionValues(element, transitionValues);\n\n            property = this.getPropertyByPropertyName(propertyName);\n            this.executeOnTransitionEndForProperty(property, element, true);\n\n            if (this.transitioningProperties.length === 0) {\n                this.removeTransitionEndListener(element, false);\n            }\n        },\n\n        finishTransitioningPropertiesIfExist: function(element) {\n            var i, j, transitionValues, transitions, transition, transitioningProperties, toBeTransitionedProperties,\n                found = false;\n\n            if (!element.hasOwnProperty(\"_transitions\") || element._transitions.length === 0) {\n                return;\n            }\n\n            transitionValues = Transition.getElementTransitionValues(element);\n            transitions = element._transitions.slice(); // _transitions array may be changed inside this loop\n            for (i = 0; i < transitions.length; i++) {\n                transition = transitions[i];\n                transitioningProperties = [];\n                toBeTransitionedProperties = [];\n                for (j = 0; j < this.properties.length; j++) {\n                    if (transition.hasTransitioningProperty(this.properties[j].cssProperty)) {\n                        transitioningProperties.push(this.properties[j]);\n                    } else if (transition.hasToBeTransitionedProperty(this.properties[j].cssProperty)) {\n                        toBeTransitionedProperties.push(this.properties[j]);\n                    }\n                }\n                if (transitioningProperties.length) {\n                    found = true;\n                    transition.allPropertiesWereFinished = false;\n                    transition.finishTransitioningProperties(element, transitioningProperties, transitionValues, this.beginFromCurrentValue);\n                } else if (toBeTransitionedProperties.length) {\n                    transition.allPropertiesWereFinished = false;\n                    transition.finishToBeTransitionedProperties(element, toBeTransitionedProperties, this.beginFromCurrentValue);\n                }\n            }\n\n            // Apply new transition values if some element transitions values were removed\n            if (found) {\n                Transition.setElementTransitionValues(element, transitionValues);\n            }\n        },\n\n        finishTransitioningProperties: function(element, properties, transitionValues, beginFromCurrentValue) {\n            var i, index, newProperty, oldProperty, propertyName;\n\n            for (i = 0; i < properties.length; i++) {\n                newProperty = properties[i];\n                propertyName = newProperty.cssProperty;\n\n                this.removeTransitioningProperty(propertyName);\n                this.updateFromToCurrentValueIfNeeded(element, newProperty, beginFromCurrentValue);\n\n                index = transitionValues.cssProperties.indexOf(propertyName);\n                if (index < 0) {\n                    throw \"[Transition.finishTransitioningProperties]: Did not find transitionProperty '\" + propertyName + \"'\";\n                }\n                transitionValues.cssProperties.splice(index, 1);\n                transitionValues.durations.splice(index, 1);\n                transitionValues.delays.splice(index, 1);\n                transitionValues.timingFunctions.splice(index, 1);\n\n                oldProperty = this.getPropertyByPropertyName(propertyName);\n                this.executeOnTransitionEndForProperty(oldProperty, element, false);\n            }\n\n            if (this.transitioningProperties.length === 0) {\n                this.removeTransitionEndListener(element, true);\n            }\n        },\n\n        finishToBeTransitionedProperties: function(element, properties, beginFromCurrentValue) {\n            var i, newProperty, oldProperty, propertyName;\n\n            for (i = 0; i < properties.length; i++) {\n                newProperty = properties[i];\n                propertyName = newProperty.cssProperty;\n\n                this.removeToBeTransitionedProperty(propertyName);\n                this.updateFromToCurrentValueIfNeeded(element, newProperty, beginFromCurrentValue);\n\n                oldProperty = this.getPropertyByPropertyName(propertyName);\n                this.executeOnTransitionEndForProperty(oldProperty, element, false);\n            }\n\n            if (this.toBeTransitionedProperties.length === 0) {\n                if (utils.isFunction(this.onAfterChangeStyle)) {\n                    this.onAfterChangeStyle(element);\n                }\n                this.removeTransitionEndListener(element, true);\n            }\n        },\n\n        updateFromToCurrentValueIfNeeded: function(element, property, beginFromCurrentValue) {\n            var isBoolean = utils.isBoolean(property.beginFromCurrentValue);\n            if (isBoolean && property.beginFromCurrentValue || !isBoolean && beginFromCurrentValue) {\n                property.from = window.getComputedStyle(element, null).getPropertyValue(property.cssProperty);\n            }\n        },\n\n        addTransitionEndListener: function(element) {\n            if (!element.hasOwnProperty(\"_transitions\")) {\n                element._transitions = [];\n            }\n\n            element._transitions.push(this);\n            element.addEventListener(utils.transitionEndEvent, /** @type EventListener */ this, false);\n        },\n\n        removeTransitionEndListener: function(element, useNewExecutionContext) {\n            var index;\n\n            if (!element.hasOwnProperty(\"_transitions\")) {\n                throw \"element does not have own _transitions property\";\n            }\n\n            index = element._transitions.indexOf(this);\n            if (index < 0) {\n                throw \"Can't remove non existing transition from an element\";\n            }\n\n            element._transitions.splice(index, 1);\n            element.removeEventListener(utils.transitionEndEvent, /** @type EventListener */ this, false);\n\n            this.executeOnTransitionEnd(element, useNewExecutionContext);\n        },\n\n        executeOnTransitionEndForProperty: function(property, element, finished) {\n            var onTransitionEnd;\n            if (utils.isFunction(property.onTransitionEnd)) {\n                onTransitionEnd = property.onTransitionEnd;\n                utils.executeInNextEventLoop(function() {\n                    onTransitionEnd(element, finished);\n                });\n            }\n        },\n\n        executeOnTransitionEnd: function(element, useNewExecutionContext) {\n            var onTransitionEnd;\n            if (utils.isFunction(this.onTransitionEnd)) {\n                onTransitionEnd = this.onTransitionEnd;\n                if (useNewExecutionContext) {\n                    utils.executeInNextEventLoop(function() {\n                        onTransitionEnd(element, this.allPropertiesWereFinished);\n                    }, this);\n                } else {\n                    onTransitionEnd(element, this.allPropertiesWereFinished);\n                }\n            }\n            this.thenable.fulfill(this.allPropertiesWereFinished);\n        }\n\n    };\n\n    return {\n        TransitionProperty: TransitionProperty,\n        property: Transition.property,\n        transition: Transition.begin,\n        begin: Transition.begin\n    };\n\n});\n"]}